@page "/CategoriaNewPage"
@inject ProxyCategoria ProxyCategoria
@inject NavigationManager NavigationManager
@inject SweetAlertService Swal
<PageTitle>Nueva Categoria</PageTitle>

<div class="container">
    <div class="card">
        <h5 class="card-header">Agregar de Categoría</h5>
        <div class="card-body border-radius: .5rem">

            <EditForm Model="@_CategoriaDTO" OnSubmit="OnSave">
                <div class="row mb-2">
                    <div class="col-md-6">
                        <label for="name" class="col-form-label">Código:</label>
                        <input type="number" class="form-control" id="IdCategoria" @bind-value="@_CategoriaDTO.IdCategoria" />
                    </div>
                </div>

                <div class="row mb-2">
                    <div class="col-md-6">
                        <label for="name" class="col-form-label">Categoria:</label>
                        <input type="text" class="form-control" @bind-value="@_CategoriaDTO.NombreCategoria" />
                    </div>
                </div>

                <div class="row mb-2">
                    <div class="col-md-6">
                        <label class="form-check-label">Habilitado</label>
                    </div>
                    <div class=" form-switch  col-md-11  mx-3">
                        <input class="form-check-input" type="checkbox" @bind-value="_CategoriaDTO.Estado" checked="@(_CategoriaDTO.Estado? "checked":null)">
                    </div>
                </div>

                <div class="button-group">
                    <button type="submit" class="btn btn-primary  ">Salvar</button>

                    <button class="btn btn-secondary  " @onclick="OnClear">Limpiar</button>
                    <button class="btn btn-warning  " @onclick="OnReturn">Salir</button>

                </div>

            </EditForm>
        </div>
    </div>
</div>



@code {

    private CategoriaDTO _CategoriaDTO { get; set; } = new();

    private void OnClear()
    {
        _CategoriaDTO = new() {  Estado = true};
    }

    private void OnReturn()
    {
        NavigationManager.NavigateTo("/CategoriaListPage");
    }

    private async void OnSave()
    {
        try
        {
            await ProxyCategoria.AddAsync(_CategoriaDTO);
            /*
             * var  response = await ProxyCategoria.AddAsync(_CategoriaDTO);
            if (!response.Success)
            {
                _ = await Swal.FireAsync(new SweetAlertOptions
                    {
                        Text = response.ErrorMessage,
                        Title = "Error",
                        Icon = SweetAlertIcon.Error,
                        ShowCloseButton = true
                    });
            }
            */

            await Swal.FireAsync(new SweetAlertOptions()
                {
                    Title = "Atención",
                    Text = "Registro salvado con éxito",
                    Icon = SweetAlertIcon.Success,
                    Timer = 1500,
                    TimerProgressBar = true
                });

            NavigationManager.NavigateTo("CategoriaListPage");

        }
        catch (Exception ex)
        {
            _ = await Swal.FireAsync(new SweetAlertOptions
                {
                    Text = ex.Message,
                    Title = "Error",
                    Icon = SweetAlertIcon.Error,
                    ShowCloseButton = true
                });
        }


    }
}
